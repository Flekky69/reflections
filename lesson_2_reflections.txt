What happens when you initialize a repository? Why do you need to do it?
new hidden directory and metadata files are created.
This is needed to start tracking file history

How is the staging area different from the working directory and the repository?
staging area is a draft area where you put temporarily your files before creating a definitive commit. The repository is the place dedicated to commits
What value do you think it offers?
As a draft it allows you to stage and unstage files till you are sure which are the files you want to create a repository commit with 

How can you use the staging area to make sure you have one commit per logical change?
you can put all the modified files by the logical change into the staging area and then proceed with the commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
when you want to experiment a new version or create a variant of existing code, that you would exist in parallel with the master branch version

How do the diagrams help you visualize the branch structure?
they provide a graphical way to see checkouts and it's easy seeing if and why a certain commit is not reachable

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Result is creating a new commit containing all the changes introduced in each branch
they are represented through a new single node for the commit as it depicts visually eactly what it haeppens

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
not sure

